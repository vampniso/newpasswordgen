import random
import string

def generate_password(length=12, use_digits=True, use_symbols=True):
    letters = string.ascii_letters
    digits = string.digits
    symbols = string.punctuation

    chars = letters
    if use_digits:
        chars += digits
    if use_symbols:
        chars += symbols

    if not chars:
        raise ValueError("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è.")

    password = ''.join(random.choice(chars) for _ in range(length))
    return password

if __name__ == "__main__":
    print("üîê –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π")

    try:
        length = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è: "))
        use_digits = input("–í–∫–ª—é—á–∞—Ç—å —Ü–∏—Ñ—Ä—ã? (y/n): ").strip().lower() == 'y'
        use_symbols = input("–í–∫–ª—é—á–∞—Ç—å —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã? (y/n): ").strip().lower() == 'y'

        result = generate_password(length, use_digits, use_symbols)
        print(f"\n‚úÖ –í–∞—à —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: {result}")
    except ValueError:
        print("–û—à–∏–±–∫–∞: –¥–ª–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
